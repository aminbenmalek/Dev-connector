{"ast":null,"code":"import Axios from 'axios';\nimport { setAlert } from './alert';\nimport { ACCOUNT_DELETED, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, GET_ALL_PROFILES, GET_REPOS } from './types'; //Get current user profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await Axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get all profiles\n\nexport const getAllProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await Axios.get('/api/profile');\n    dispatch(getCurrentProfile());\n    dispatch({\n      type: GET_ALL_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get profile by ID\n\nexport const getProfileByID = userid => async dispatch => {\n  try {\n    const res = await Axios.get(`/api/profile/user/${userid}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get Github Repos\n\nexport const getRepos = username => async dispatch => {\n  try {\n    const res = await Axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Create or update a profile\n\nexport const createProfile = function (formData, history) {\n  let edit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          'content-type': 'application/json'\n        }\n      };\n      const res = await Axios.post('/api/profile', formData, config);\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n      history.push('/dashboard');\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n}; //Add Experience\n\nexport const addExp = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n    const res = await Axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    console.log(res.data);\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Education\n\nexport const addEd = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n    const res = await Axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    console.log(res.data);\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete Experience\n\nexport const deleteExp = id => async dispatch => {\n  try {\n    const res = await Axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete Education\n\nexport const deleteEd = id => async dispatch => {\n  try {\n    const res = await Axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete Account&Profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This cannot be undone!')) {\n    try {\n      await Axios.delete('/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your Account has been permanently Deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Amin/Desktop/react/dev-connection-demo/client/src/actions/profile.js"],"names":["Axios","setAlert","ACCOUNT_DELETED","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","GET_ALL_PROFILES","GET_REPOS","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getAllProfiles","getProfileByID","userid","getRepos","username","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExp","put","console","log","addEd","deleteExp","id","delete","deleteEd","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import Axios from 'axios'\r\nimport {setAlert} from './alert'\r\nimport {ACCOUNT_DELETED, GET_PROFILE,PROFILE_ERROR,UPDATE_PROFILE,CLEAR_PROFILE,GET_ALL_PROFILES,GET_REPOS}from './types'\r\n//Get current user profile\r\nexport const getCurrentProfile=()=>async dispatch=>{\r\n    try {\r\n        const res=await Axios.get('/api/profile/me')\r\n        dispatch({type:GET_PROFILE,payload:res.data})\r\n\r\n    } catch (err) {\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n} \r\n//Get all profiles\r\nexport const getAllProfiles=()=>async dispatch=>{\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    try {\r\n        const res=await Axios.get('/api/profile')\r\n        dispatch(getCurrentProfile())\r\n        dispatch({type:GET_ALL_PROFILES,payload:res.data})\r\n    } catch (err) {\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n    }\r\n}\r\n//Get profile by ID\r\nexport const getProfileByID=(userid)=>async dispatch=>{\r\n    try {\r\n        const res=await Axios.get(`/api/profile/user/${userid}`)\r\n        dispatch({type:GET_PROFILE,payload:res.data})\r\n    } catch (err) {\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n    }\r\n}\r\n//Get Github Repos\r\nexport const getRepos=(username)=>async dispatch=>{\r\n    \r\n    try {\r\n        const res=await Axios.get(`/api/profile/github/${username}`)\r\n        dispatch({type:GET_REPOS,payload:res.data})\r\n    } catch (err) {\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n    }\r\n}\r\n//Create or update a profile\r\nexport const createProfile=(formData,history,edit=false)=>async dispatch=>{\r\n    try {\r\n        const config={\r\n            headers:{\r\n                'content-type':'application/json'\r\n            }\r\n    \r\n        }\r\n        const res=await Axios.post('/api/profile',formData,config)\r\n        dispatch({type:GET_PROFILE,payload:res.data})\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created','success'))\r\n        \r\n            history.push('/dashboard')\r\n        \r\n    } catch (err) {\r\n        const errors =err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error=>dispatch(setAlert(error.msg,'danger')))\r\n        }\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n        \r\n    }\r\n}\r\n//Add Experience\r\nexport const addExp=(formData,history)=>async dispatch=>{\r\n    try {\r\n        const config={\r\n            headers:{\r\n                'content-type':'application/json'\r\n            }\r\n    \r\n        }\r\n        const res=await Axios.put('/api/profile/experience',formData,config)\r\n        dispatch({type:UPDATE_PROFILE,payload:res.data})\r\n        console.log(res.data)\r\n        dispatch(setAlert( 'Experience Added' ,'success'))\r\n        \r\n            history.push('/dashboard')\r\n        \r\n    } catch (err) {\r\n        const errors =err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error=>dispatch(setAlert(error.msg,'danger')))\r\n        }\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n        \r\n    }\r\n}\r\n//Add Education\r\nexport const addEd=(formData,history)=>async dispatch=>{\r\n    try {\r\n        const config={\r\n            headers:{\r\n                'content-type':'application/json'\r\n            }\r\n    \r\n        }\r\n        const res=await Axios.put('/api/profile/education',formData,config)\r\n        dispatch({type:UPDATE_PROFILE,payload:res.data})\r\n        console.log(res.data)\r\n        dispatch(setAlert( 'Education Added' ,'success'))\r\n        \r\n            history.push('/dashboard')\r\n        \r\n    } catch (err) {\r\n        const errors =err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error=>dispatch(setAlert(error.msg,'danger')))\r\n        }\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n        \r\n    }\r\n}\r\n//Delete Experience\r\nexport const deleteExp=(id)=>async dispatch=>{\r\n    try {\r\n        const res=await Axios.delete(`/api/profile/experience/${id}`)\r\n        dispatch({type:UPDATE_PROFILE,payload:res.data})\r\n        dispatch(setAlert( 'Experience Deleted' ,'success'))\r\n\r\n    } catch (err) {\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n    }\r\n}\r\n//Delete Education\r\nexport const deleteEd=(id)=>async dispatch=>{\r\n    try {\r\n        const res=await Axios.delete(`/api/profile/education/${id}`)\r\n        dispatch({type:UPDATE_PROFILE,payload:res.data})\r\n        dispatch(setAlert( 'Education Deleted' ,'success'))\r\n\r\n    } catch (err) {\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n    }\r\n}\r\n//Delete Account&Profile\r\nexport const deleteAccount=()=>async dispatch=>{\r\n    if(window.confirm('Are you sure? This cannot be undone!')){\r\n        try {\r\n            await Axios.delete('/api/profile')\r\n            dispatch({type:CLEAR_PROFILE})\r\n            dispatch({type:ACCOUNT_DELETED})\r\n            dispatch(setAlert( 'Your Account has been permanently Deleted' ))\r\n    \r\n        } catch (err) {\r\n            dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    \r\n        }\r\n    }\r\n    \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}