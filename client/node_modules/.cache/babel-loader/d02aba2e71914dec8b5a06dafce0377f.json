{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amin\\\\Desktop\\\\react\\\\dev-connection-demo\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/layout/Spinner';\nimport { getProfileByID } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExp from './ProfileExp';\nimport ProfileEd from './ProfileEd';\nimport ProfileGit from './ProfileGit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = _ref => {\n  _s();\n\n  let {\n    getProfileByID,\n    profile: {\n      profile,\n      loading\n    },\n    auth,\n    match\n  } = _ref;\n  useEffect(() => {\n    var _match$params;\n\n    getProfileByID((_match$params = match.params) === null || _match$params === void 0 ? void 0 : _match$params.id);\n  }, [getProfileByID]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back to Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-profile\",\n        className: \"btn btn-dark\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 107\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"profile-grid my-1\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-exp bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            class: \"text-primary\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.experience.map(experience => /*#__PURE__*/_jsxDEV(ProfileExp, {\n              experience: experience\n            }, experience._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No experience credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-edu bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            class: \"text-primary\",\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), profile.education.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.education.map(education => /*#__PURE__*/_jsxDEV(ProfileEd, {\n              education: education\n            }, education._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No education credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), profile.githubusername && /*#__PURE__*/_jsxDEV(ProfileGit, {\n          username: profile.githubusername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 56\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileByID: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileByID\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/Amin/Desktop/react/dev-connection-demo/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileByID","Link","ProfileTop","ProfileAbout","ProfileExp","ProfileEd","ProfileGit","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","education","githubusername","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React,{Fragment,useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../../components/layout/Spinner'\r\nimport {getProfileByID} from '../../actions/profile'\r\nimport { Link } from 'react-router-dom'\r\nimport ProfileTop from './ProfileTop'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileExp from './ProfileExp'\r\nimport ProfileEd from './ProfileEd'\r\nimport ProfileGit from './ProfileGit'\r\n\r\n\r\nconst Profile = ({getProfileByID,profile:{profile,loading},auth,match}) => {\r\n    useEffect(()=>{\r\n        getProfileByID(match.params?.id)\r\n    },[getProfileByID])\r\n    return (\r\n        <Fragment>\r\n            {profile===null || loading ? <Spinner /> : <Fragment>\r\n                <Link to=\"/profiles\" className=\"btn btn-light\" >Back to Profiles</Link>\r\n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (<Link to='/edit-profile' className=\"btn btn-dark\">Edit Profile</Link>)}\r\n                <div class=\"profile-grid my-1\">\r\n                    <ProfileTop profile={profile} />\r\n                    <ProfileAbout profile={profile} />\r\n                    <div className=\"profile-exp bg-white p-2\">\r\n                    <h2 class=\"text-primary\">Experience</h2>\r\n                    {profile.experience.length > 0 ? (\r\n                    <Fragment>\r\n                    {profile.experience.map((experience) => (\r\n                    <ProfileExp\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n              </div>\r\n              <div className=\"profile-edu bg-white p-2\">\r\n                    <h2 class=\"text-primary\">Education</h2>\r\n                    {profile.education.length > 0 ? (\r\n                    <Fragment>\r\n                    {profile.education.map((education) => (\r\n                    <ProfileEd\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n              </div>\r\n              {profile.githubusername &&<ProfileGit username={profile.githubusername} />}\r\n                </div>\r\n                </Fragment>}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    getProfileByID:PropTypes.func.isRequired,\r\n    profile:PropTypes.object.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps=state=>({\r\n    profile:state.profile,\r\n    auth:state.auth\r\n})\r\nexport default connect(mapStateToProps,{getProfileByID})(Profile)\r\n"]},"metadata":{},"sourceType":"module"}