{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amin\\\\Desktop\\\\react\\\\dev-connection-demo\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = _ref => {\n  _s();\n\n  let {\n    setAlert,\n    register,\n    isAuthenticated\n  } = _ref;\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      }); //setAlert('Registration Successful','success')\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Sign-up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }, this), \"Create your Account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          value: name,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"E-mail\",\n          name: \"email\",\n          value: email,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text\",\n          children: \"This site uses gravatar ,so if you want a profile image,use a gravatar email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm password\",\n          minlength: \"6\",\n          name: \"password2\",\n          value: password2,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register\",\n        className: \"btn btn-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: [\"Already have an Account?\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Sign-in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"Y9SCaMNOZsII6MSseIHsbbTSn3A=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Amin/Desktop/react/dev-connection-demo/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","connect","Link","Redirect","setAlert","register","PropTypes","Register","isAuthenticated","formData","setFormData","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React,{ Fragment,useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {setAlert} from '../../actions/alert'\r\nimport {register} from '../../actions/auth'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Register = ({setAlert,register,isAuthenticated}) => {\r\n    const [formData,setFormData]=useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n    })\r\n    const {name,email,password,password2}=formData\r\n    const onChange=e=>setFormData({...formData,[e.target.name]:e.target.value})\r\n    const onSubmit=async(e)=>{\r\n        e.preventDefault()\r\n        if(password !==password2){\r\n            setAlert('Passwords do not match','danger')\r\n        }else{\r\n            register({name,email,password})\r\n            //setAlert('Registration Successful','success')\r\n            \r\n        }\r\n    }\r\n    if(isAuthenticated){\r\n        return <Redirect to='/dashboard' />\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n            Sign-up\r\n        </h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i>\r\n        Create your Account</p>\r\n        <form onSubmit={e =>onSubmit(e)} className=\"form\">\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Name\" name='name' value={name} onChange={e =>onChange(e)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"email\" placeholder=\"E-mail\" name='email' value={email}  onChange={e =>onChange(e)}  />\r\n                <small className=\"form-text\">\r\n                    This site uses gravatar ,so if you want a profile image,use a gravatar email \r\n                </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" value={password}  onChange={e =>onChange(e)}   />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"password\" placeholder=\"Confirm password\" minlength=\"6\" name='password2' value={password2}  onChange={e =>onChange(e)} />\r\n            </div>\r\n            <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" />\r\n        </form>\r\n        <p className=\"my-1\">Already have an Account?<Link to=\"/login\">Sign-in</Link></p>\r\n        </Fragment>\r\n    )\r\n}\r\nRegister.propTypes={\r\n    setAlert:PropTypes.func.isRequired,\r\n    register:PropTypes.func.isRequired,\r\n    isAuthenticated:PropTypes.bool,\r\n}\r\nconst mapStateToProps=(state)=>({\r\n    isAuthenticated:state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps,{setAlert,register})(Register)\r\n"]},"metadata":{},"sourceType":"module"}