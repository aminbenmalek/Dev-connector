{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amin\\\\Desktop\\\\react\\\\dev-connection-demo\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllProfiles } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profiles = _ref => {\n  _s();\n\n  let {\n    getAllProfiles,\n    profile: {\n      loading,\n      profiles\n    }\n  } = _ref;\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Developers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-connectdevelop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), \"Browser and Communicate with Developers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profiles\",\n        children: (profiles === null || profiles === void 0 ? void 0 : profiles.length) > 0 ? profiles === null || profiles === void 0 ? void 0 : profiles.map(profile => /*#__PURE__*/_jsxDEV(ProfileItem, {\n          profile: profile\n        }, profile._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No profiles found...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profiles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profiles;\nProfiles.propTypes = {\n  getAllProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getAllProfiles\n})(Profiles);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"sources":["C:/Users/Amin/Desktop/react/dev-connection-demo/client/src/components/profiles/Profiles.js"],"names":["React","useEffect","Fragment","PropTypes","connect","getAllProfiles","Spinner","ProfileItem","Profiles","profile","loading","profiles","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAG,QAAiD;AAAA;;AAAA,MAAhD;AAACH,IAAAA,cAAD;AAAgBI,IAAAA,OAAO,EAAC;AAACC,MAAAA,OAAD;AAASC,MAAAA;AAAT;AAAxB,GAAgD;AAC9DV,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,cAAc;AACjB,GAFQ,EAEP,CAACA,cAAD,CAFO,CAAT;AAGA,sBACI,QAAC,QAAD;AAAA,cACMK,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBACT,QAAC,QAAD;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACH,CAAAC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,MAAV,IAAmB,CAAnB,GACCD,QADD,aACCA,QADD,uBACCA,QAAQ,CAAEE,GAAV,CAAcJ,OAAO,iBACnB,QAAC,WAAD;AAA+B,UAAA,OAAO,EAAEA;AAAxC,WAAkBA,OAAO,CAACK,GAA1B;AAAA;AAAA;AAAA;AAAA,gBADF,CADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANE;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAxBD;;GAAMN,Q;;KAAAA,Q;AA0BNA,QAAQ,CAACO,SAAT,GAAqB;AACpBV,EAAAA,cAAc,EAACF,SAAS,CAACa,IAAV,CAAeC,UADV;AAEpBR,EAAAA,OAAO,EAACN,SAAS,CAACe,MAAV,CAAiBD;AAFL,CAArB;;AAIA,MAAME,eAAe,GAACC,KAAK,KAAG;AAC1BX,EAAAA,OAAO,EAACW,KAAK,CAACX;AADY,CAAH,CAA3B;;AAIA,eAAeL,OAAO,CAACe,eAAD,EAAiB;AAACd,EAAAA;AAAD,CAAjB,CAAP,CAA0CG,QAA1C,CAAf","sourcesContent":["import React,{useEffect,Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {getAllProfiles} from '../../actions/profile'\r\nimport Spinner from '../layout/Spinner'\r\nimport ProfileItem from './ProfileItem'\r\n\r\nconst Profiles = ({getAllProfiles,profile:{loading,profiles}}) => {\r\n    useEffect(()=>{\r\n        getAllProfiles()\r\n    },[getAllProfiles])\r\n    return (\r\n        <Fragment>\r\n            { loading ? <Spinner /> : \r\n            <Fragment>\r\n                <h1 className=\"large text-primary\">Developers</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fab fa-connectdevelop\"></i>Browser and Communicate with Developers\r\n                </p>\r\n                <div className='profiles'>\r\n            {profiles?.length > 0 ? (\r\n              profiles?.map(profile => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n            </Fragment> }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\n getAllProfiles:PropTypes.func.isRequired,\r\n profile:PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps=state=>({\r\n    profile:state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps,{getAllProfiles})(Profiles)\r\n"]},"metadata":{},"sourceType":"module"}