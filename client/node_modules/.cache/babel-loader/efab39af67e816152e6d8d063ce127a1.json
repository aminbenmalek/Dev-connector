{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amin\\\\Desktop\\\\react\\\\dev-connection-demo\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getRepos } from '../../actions/profile';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileGit = _ref => {\n  _s();\n\n  let {\n    username,\n    getRepos,\n    repos\n  } = _ref;\n  useEffect(() => {\n    getRepos(username);\n  }, [getRepos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \"Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 31\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: repo.html_url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [repo.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: repo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, repo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 34\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileGit, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProfileGit;\nProfileGit.propTypes = {\n  username: PropTypes.string.isRequired,\n  getRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getRepos\n})(ProfileGit);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGit\");","map":{"version":3,"sources":["C:/Users/Amin/Desktop/react/dev-connection-demo/client/src/components/profile/ProfileGit.js"],"names":["React","useEffect","PropTypes","getRepos","connect","Spinner","ProfileGit","username","repos","map","repo","html_url","name","description","_id","propTypes","string","isRequired","func","array","mapStateToProps","state","profile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,QAAuB,uBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AACA,MAAMC,UAAU,GAAE,QAA+B;AAAA;;AAAA,MAA9B;AAACC,IAAAA,QAAD;AAAUJ,IAAAA,QAAV;AAAmBK,IAAAA;AAAnB,GAA8B;AAC7CP,EAAAA,SAAS,CAAC,MAAI;AACVE,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACH,GAFQ,EAEP,CAACJ,QAAD,CAFO,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKK,KAAK,KAAK,IAAV,gBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAjB,GACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBAAG;AAAoB,MAAA,SAAS,EAAC,wBAA9B;AAAA,8BACb;AAAA,+BACI;AAAG,UAAA,IAAI,EAAEA,IAAI,CAACC,QAAd;AAAwB,UAAA,MAAM,EAAC,QAA/B;AAAwC,UAAA,GAAG,EAAC,qBAA5C;AAAA,qBACKD,IAAI,CAACE,IADV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADa,eAMrB;AAAA,kBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,cANqB;AAAA,OAAUH,IAAI,CAACI,GAAf;AAAA;AAAA;AAAA;AAAA,YAAjB,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAnBD;;GAAMR,U;;KAAAA,U;AAqBNA,UAAU,CAACS,SAAX,GAAuB;AACnBR,EAAAA,QAAQ,EAACL,SAAS,CAACc,MAAV,CAAiBC,UADP;AAEnBd,EAAAA,QAAQ,EAACD,SAAS,CAACgB,IAAV,CAAeD,UAFL;AAGnBT,EAAAA,KAAK,EAACN,SAAS,CAACiB,KAAV,CAAgBF;AAHH,CAAvB;;AAKA,MAAMG,eAAe,GAACC,KAAK,KAAG;AAC1Bb,EAAAA,KAAK,EAACa,KAAK,CAACC,OAAN,CAAcd;AADM,CAAH,CAA3B;;AAGA,eAAeJ,OAAO,CAACgB,eAAD,EAAiB;AAACjB,EAAAA;AAAD,CAAjB,CAAP,CAAoCG,UAApC,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {getRepos} from '../../actions/profile'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nconst ProfileGit =({username,getRepos,repos}) => {\r\n    useEffect(()=>{\r\n        getRepos(username)\r\n    },[getRepos])\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n            {repos === null ? <Spinner /> : (\r\n                repos.map(repo=>(<div key={repo._id} className='repo bg-white p-1 my-1'>\r\n                    <h4>\r\n                        <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\r\n                            {repo.name}:\r\n                        </a>\r\n                    </h4>\r\n            <p>{repo.description}</p>\r\n                </div>))\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileGit.propTypes = {\r\n    username:PropTypes.string.isRequired,\r\n    getRepos:PropTypes.func.isRequired,\r\n    repos:PropTypes.array.isRequired,\r\n}\r\nconst mapStateToProps=state=>({\r\n    repos:state.profile.repos\r\n})\r\nexport default connect(mapStateToProps,{getRepos})(ProfileGit)\r\n"]},"metadata":{},"sourceType":"module"}